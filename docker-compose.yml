# üê≥ TriplePlay-Sentinel - Docker Compose
# Sistema de Monitoramento MikroTik com Redis para cache de alta performance

version: '3.8'

services:
  # =================================================================
  # CORE SERVICES
  # =================================================================
  
  # TriplePlay-Sentinel Collector
  sentinel-collector:
    build:
      context: ./src/collector
      dockerfile: Dockerfile
    container_name: tripleplay-sentinel-collector
    hostname: sentinel-collector
    restart: unless-stopped
    
    ports:
      - "58500:5000"
    
    environment:
      # Configura√ß√µes b√°sicas
      COLLECTOR_HOST: 0.0.0.0
      COLLECTOR_PORT: 5000
      LOG_LEVEL: INFO
      
      # Redis Cache
      REDIS_ENABLED: true
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      CACHE_TTL: 30
      
      # SSH/MikroTik
      SSH_TIMEOUT: 30
      SSH_MAX_RETRIES: 3
      
      # Performance
      MAX_WORKERS: 10
      REQUEST_TIMEOUT: 60
      
      # Seguran√ßa
      ENABLE_AUTH: ${ENABLE_AUTH:-false}
      API_KEY: ${API_KEY:-}
      
    volumes:
      - sentinel_logs:/app/logs
      - ./src/collector/.env:/app/.env:ro
    
    networks:
      - public_network
      - app_network
    
    depends_on:
      redis:
        condition: service_healthy
    
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    labels:
      - "com.tripleplay.service=sentinel-collector"
      - "com.tripleplay.version=2.1.0"

  # =================================================================
  # CACHE
  # =================================================================
  
  # Redis para cache distribu√≠do
  redis:
    image: redis:7-alpine
    container_name: tripleplay-redis
    hostname: redis
    restart: unless-stopped
    
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    
    command: >
      redis-server 
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    
    networks:
      - app_network
    
    volumes:
      - redis_data:/data
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    
    labels:
      - "com.tripleplay.service=redis-cache"

# =================================================================
# VOLUMES
# =================================================================
volumes:
  # Cache Redis
  redis_data:
    driver: local
  
  # Logs
  sentinel_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs

# =================================================================
# NETWORKS
# =================================================================
networks:
  # Rede interna - apenas para comunica√ß√£o Redis
  app_network:
    name: tripleplay-app-network
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 172.20.1.0/24
  
  # Rede externa - acesso p√∫blico ao Sentinel
  public_network:
    name: tripleplay-public-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.2.0/24